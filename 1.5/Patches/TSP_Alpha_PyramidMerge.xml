<?xml version="1.0" encoding="utf-8"?>
<Patch>
	<!-- Aelanna's Model No-Match Detector and Insertion Code -->
	<!-- Special thanks to Aelanna for straight-up saving me scores of headaches! -->
	<!-- Add comps field to Settlement WorldObjectDef if it doesn't exist -->
	<Operation Class="PatchOperationConditional">
		<xpath>/Defs/TerrainDef[@Name="AM_Floor_KemeticFineTiles"]/researchPrerequisites</xpath>
		<nomatch Class="PatchOperationAdd">
			<xpath>/Defs/TerrainDef[@Name="AM_Floor_KemeticFineTiles"]</xpath>
			<success>Always</success>
			<value>
				<researchPrerequisites Inherit="False"></researchPrerequisites>
			</value>
		</nomatch>
	</Operation>
  <Operation Class="PatchOperationConditional">
    <!-- DO THE GENTILES KNOW? -->
    <xpath>/Defs/MemeDef[defName="AM_Structure_Kemetism"]/addDesignators</xpath>
    <!-- If they do, SHUT IT DOWN. -->
    <match Class="PatchOperationRemove">
      <success>Always</success>
      <xpath>/Defs/StyleCategoryDef[defName="AM_Kemetic"]/addDesignators</xpath>
    </match>
    <!-- If the first XPATH does not exist, the original code stands. All according to plan. -->
  </Operation>
  <Operation Class="PatchOperationConditional">
    <!-- DO THE GENTILES KNOW? -->
    <xpath>/Defs/MemeDef[defName="AM_Structure_Kemetism"]/addDesignatorGroups</xpath>
    <!-- If they do, SHUT IT DOWN. -->
    <match Class="PatchOperationRemove">
      <success>Always</success>
      <xpath>/Defs/StyleCategoryDef[defName="AM_Kemetic"]/addDesignatorGroups</xpath>
    </match>
    <!-- If the first XPATH does not exist, the original code stands. All according to plan. -->
  </Operation>
  <Operation Class="PatchOperationConditional">
    <!-- Does this exist? -->
    <xpath>/Defs/MemeDef[defName="AM_Structure_Kemetism"]</xpath>
    <!-- If it does, add this. -->
    <match Class="PatchOperationAdd">
      <success>Always</success>
      <xpath>/Defs/TerrainDef[@Name="AM_KemeticTileStoneBase"]/researchPrerequisites</xpath>
      <value>
        <li>AR_Project_Oriental_Culture</li>
      </value>
    </match>
    <!-- If the first XPATH does not exist, the original code stands. -->
  </Operation>
  <Operation Class="PatchOperationConditional">
    <!-- Does this exist? -->
    <xpath>/Defs/MemeDef[defName="AM_Structure_Kemetism"]</xpath>
    <!-- If it does, add this. -->
    <match Class="PatchOperationAdd">
      <success>Always</success>
      <xpath>/Defs/TerrainDef[@Name="AM_Floor_KemeticFineTiles"]/researchPrerequisites</xpath>
      <value>
        <li>AR_Project_Oriental_Culture</li>
      </value>
    </match>
    <!-- If the first XPATH does not exist, the original code stands. -->
  </Operation>
  <Operation Class="PatchOperationConditional">
    <!-- Does this exist? -->
    <xpath>/Defs/MemeDef[defName="AM_Structure_Kemetism"]</xpath>
    <!-- If it does, do this replacement. -->
    <match Class="PatchOperationReplace">
      <success>Always</success>
      <xpath>/Defs/TerrainDef[@Name="AM_KemeticTileStoneBase"]/canGenerateDefaultDesignator</xpath>
      <value>
        <canGenerateDefaultDesignator>true</canGenerateDefaultDesignator>
      </value>
    </match>
    <!-- If the first XPATH does not exist, the original code stands. -->
  </Operation>
  <Operation Class="PatchOperationConditional">
    <!-- Does this exist? -->
    <xpath>/Defs/MemeDef[defName="AM_Structure_Kemetism"]</xpath>
    <!-- If it does, add this. -->
    <match Class="PatchOperationAdd">
      <success>Always</success>
      <xpath>/Defs/TerrainDef[@Name="AM_KemeticFineStoneTiles"]</xpath>
      <value>
        <canGenerateDefaultDesignator>true</canGenerateDefaultDesignator>
      </value>
    </match>
    <!-- If the first XPATH does not exist, the original code stands. -->
  </Operation>
  <Operation Class="PatchOperationConditional">
    <!-- Does this exist? -->
    <xpath>/Defs/MemeDef[defName="AM_Structure_Kemetism"]</xpath>
    <!-- If it does, add this. -->
    <match Class="PatchOperationAdd">
      <success>Always</success>
      <xpath>/Defs/ThingDef[defName="AM_KemeticSlab_Medium"]/researchPrerequisites</xpath>
      <value>
        <li>AR_Project_Oriental_Culture</li>
      </value>
    </match>
    <!-- If the first XPATH does not exist, the original code stands. -->
  </Operation>
  <Operation Class="PatchOperationConditional">
    <!-- Does this exist? -->
    <xpath>/Defs/MemeDef[defName="AM_Structure_Kemetism"]</xpath>
    <!-- If it does, add this. -->
    <match Class="PatchOperationAdd">
      <success>Always</success>
      <xpath>/Defs/ThingDef[defName="AM_KemeticSlab_Broad"]/researchPrerequisites</xpath>
      <value>
        <li>AR_Project_Oriental_Culture</li>
      </value>
    </match>
    <!-- If the first XPATH does not exist, the original code stands. -->
  </Operation>
  
  
  <Operation Class="PatchOperationConditional">
    <!-- Does this exist? -->
    <xpath>/Defs/MemeDef[defName="AM_Structure_Kemetism"]</xpath>
    <!-- If it does, do this replacement. -->
    <match Class="PatchOperationReplace">
      <success>Always</success>
      <xpath>/Defs/ThingDef[defName="AM_GrandGate"]/canGenerateDefaultDesignator</xpath>
      <value>
        <canGenerateDefaultDesignator>true</canGenerateDefaultDesignator>
      </value>
    </match>
    <!-- If the first XPATH does not exist, the original code stands. -->
  </Operation>
  <Operation Class="PatchOperationConditional">
    <!-- Does this exist? -->
    <xpath>/Defs/MemeDef[defName="AM_Structure_Kemetism"]</xpath>
    <!-- If it does, add this. -->
    <match Class="PatchOperationAdd">
      <success>Always</success>
      <xpath>/Defs/ThingDef[defName="AM_GrandGate"]/researchPrerequisites</xpath>
      <value>
        <li>AR_Project_Oriental_Culture</li>
      </value>
    </match>
    <!-- If the first XPATH does not exist, the original code stands. -->
  </Operation>
  
  
  <Operation Class="PatchOperationConditional">
    <!-- Does this exist? -->
    <xpath>/Defs/MemeDef[defName="AM_FuturisticObelisk"]/canGenerateDefaultDesignator</xpath>
    <!-- If it does, do this replacement. -->
    <match Class="PatchOperationReplace">
      <success>Always</success>
      <xpath>/Defs/ThingDef[defName="AM_FuturisticObelisk"]/canGenerateDefaultDesignator</xpath>
      <value>
        <canGenerateDefaultDesignator>true</canGenerateDefaultDesignator>
      </value>
    </match>
	<!-- If it DOES NOT, add this. -->
    <nomatch Class="PatchOperationAdd">
      <success>Always</success>
      <xpath>/Defs/ThingDef[defName="AM_FuturisticObelisk"]</xpath>
      <value>
        <canGenerateDefaultDesignator>true</canGenerateDefaultDesignator>
      </value>
    </nomatch>
    <!-- If the first XPATH does not exist, the original code stands. -->
  </Operation>
  <Operation Class="PatchOperationConditional">
    <!-- Does this exist? -->
    <xpath>/Defs/MemeDef[defName="AM_Structure_Kemetism"]</xpath>
    <!-- If it does, add this. -->
    <match Class="PatchOperationAdd">
      <success>Always</success>
      <xpath>/Defs/ThingDef[defName="AM_FuturisticObelisk"]/researchPrerequisites</xpath>
      <value>
        <li>AR_Project_Oriental_Culture</li>
		<li MayRequire="VanillaExpanded.VFEArt">VFE_Res_Obelisk</li>
      </value>
    </match>
    <!-- If the first XPATH does not exist, the original code stands. -->
  </Operation>
  
  
  <Operation Class="PatchOperationConditional">
    <!-- Does this exist? -->
    <xpath>/Defs/MemeDef[defName="AM_Structure_Kemetism"]</xpath>
    <!-- If it does, do this replacement. -->
    <match Class="PatchOperationReplace">
      <success>Always</success>
      <xpath>/Defs/ThingDef[defName="AM_FuturisticStele"]/canGenerateDefaultDesignator</xpath>
      <value>
        <canGenerateDefaultDesignator>true</canGenerateDefaultDesignator>
      </value>
    </match>
    <!-- If the first XPATH does not exist, the original code stands. -->
  </Operation>
  <Operation Class="PatchOperationConditional">
    <!-- Does this exist? -->
    <xpath>/Defs/MemeDef[defName="AM_Structure_Kemetism"]</xpath>
    <!-- If it does, add this. -->
    <match Class="PatchOperationAdd">
      <success>Always</success>
      <xpath>/Defs/ThingDef[defName="AM_FuturisticStele"]/researchPrerequisites</xpath>
      <value>
        <li>AR_Project_Oriental_Culture</li>
      </value>
    </match>
    <!-- If the first XPATH does not exist, the original code stands. -->
  </Operation>
  
  
  
  <Operation Class="PatchOperationConditional">
    <!-- Does this exist? -->
    <xpath>/Defs/MemeDef[defName="AM_Structure_Kemetism"]</xpath>
    <!-- If it does, do this replacement. -->
    <match Class="PatchOperationReplace">
      <success>Always</success>
      <xpath>/Defs/ThingDef[defName="AM_FuturisticPyramid"]/canGenerateDefaultDesignator</xpath>
      <value>
        <canGenerateDefaultDesignator>true</canGenerateDefaultDesignator>
      </value>
    </match>
    <!-- If the first XPATH does not exist, the original code stands. -->
  </Operation>
  <Operation Class="PatchOperationConditional">
    <!-- Does this exist? -->
    <xpath>/Defs/MemeDef[defName="AM_Structure_Kemetism"]</xpath>
    <!-- If it does, add this. -->
    <match Class="PatchOperationAdd">
      <success>Always</success>
      <xpath>/Defs/ThingDef[defName="AM_FuturisticPyramid"]/researchPrerequisites</xpath>
      <value>
        <li>AR_Project_Oriental_Culture</li>
      </value>
    </match>
    <!-- If the first XPATH does not exist, the original code stands. -->
  </Operation>
  
  
  
  <Operation Class="PatchOperationConditional">
    <!-- Does this exist? -->
    <xpath>/Defs/MemeDef[defName="AM_Structure_Kemetism"]</xpath>
    <!-- If it does, do this replacement. -->
    <match Class="PatchOperationReplace">
      <success>Always</success>
      <xpath>/Defs/ThingDef[defName="AM_Sphynx"]/canGenerateDefaultDesignator</xpath>
      <value>
        <canGenerateDefaultDesignator>true</canGenerateDefaultDesignator>
      </value>
    </match>
    <!-- If the first XPATH does not exist, the original code stands. -->
  </Operation>
  <Operation Class="PatchOperationConditional">
    <!-- Does this exist? -->
    <xpath>/Defs/MemeDef[defName="AM_Structure_Kemetism"]</xpath>
    <!-- If it does, add this. -->
    <match Class="PatchOperationAdd">
      <success>Always</success>
      <xpath>/Defs/ThingDef[defName="AM_Sphynx"]/researchPrerequisites</xpath>
      <value>
        <li>AR_Project_Oriental_Culture</li>
      </value>
    </match>
    <!-- If the first XPATH does not exist, the original code stands. -->
  </Operation>
  
  
  <Operation Class="PatchOperationConditional">
    <!-- Does this exist? -->
    <xpath>/Defs/MemeDef[defName="AM_Structure_Kemetism"]</xpath>
    <!-- If it does, do this replacement. -->
    <match Class="PatchOperationReplace">
      <success>Always</success>
      <xpath>/Defs/ThingDef[defName="AM_GreatPyramid"]/canGenerateDefaultDesignator</xpath>
      <value>
        <canGenerateDefaultDesignator>true</canGenerateDefaultDesignator>
      </value>
    </match>
    <!-- If the first XPATH does not exist, the original code stands. -->
  </Operation>
  <Operation Class="PatchOperationConditional">
    <!-- Does this exist? -->
    <xpath>/Defs/MemeDef[defName="AM_Structure_Kemetism"]</xpath>
    <!-- If it does, add this. -->
    <match Class="PatchOperationAdd">
      <success>Always</success>
      <xpath>/Defs/ThingDef[defName="AM_GreatPyramid"]/researchPrerequisites</xpath>
      <value>
        <li>AR_Project_Oriental_Culture</li>
      </value>
    </match>
    <!-- If the first XPATH does not exist, the original code stands. -->
  </Operation>
  
  
  
  <!-- Reconfigured Alpha Memes Pyramid for this Mod -->
  <Operation Class="PatchOperationConditional">
    <!-- Does this exist? -->
    <xpath>/Defs/ThingDef[defName="AM_Pyramid"]</xpath>
    <!-- If it does, do this replacement. -->
    <match Class="PatchOperationReplace">
      <success>Always</success>
      <xpath>/Defs/ThingDef[defName="AM_Pyramid"]</xpath>
      <value>
        <ThingDef ParentName="SteleBase">
          <defName>AM_Pyramid</defName>
          <label>pyramid</label>
          <description>A gigantic structure whose outer surfaces are triangular and converge to a single step at the top. A Pawn can be granted the incredible honor of being stored here and be dignified for all of time.</description>
          <category>Building</category>
          <thingClass Inherit="False">Building_Grave</thingClass>
          <designationCategory>Jerry</designationCategory>
          <forceDebugSpawnable>true</forceDebugSpawnable>
          <graphicData>
            <graphicClass>Graphic_Single</graphicClass>
            <texPath>Things/Building/BuildingStyles/Kemetic/AM_Pyramid</texPath>
            <drawSize>(13,13)</drawSize>
            <damageData>
              <cornerTL>Damage/Corner</cornerTL>
              <cornerTR>Damage/Corner</cornerTR>
              <cornerBL>Damage/Corner</cornerBL>
              <cornerBR>Damage/Corner</cornerBR>
              <edgeTop>Damage/Edge</edgeTop>
              <edgeBot>Damage/Edge</edgeBot>
              <edgeLeft>Damage/Edge</edgeLeft>
              <edgeRight>Damage/Edge</edgeRight>
            </damageData>
          </graphicData>
          <uiIconPath>Icon/EgyptianCulture</uiIconPath>
          <rotatable>false</rotatable>
          <size>(12,12)</size>
          <canOverlapZones>false</canOverlapZones>
          <coversFloor>true</coversFloor>
          <dominantStyleCategory MayRequire="Sarg.AlphaMemes">AM_Kemetic</dominantStyleCategory>
          <inspectorTabs>
            <li>ITab_Storage</li>
            <li>ITab_Art</li>
            <li>ITab_ContentsCasket</li>
          </inspectorTabs>
          <statBases>
            <MaxHitPoints>30000</MaxHitPoints>
            <Beauty>1000</Beauty>
            <Mass>20000</Mass>
            <WorkToBuild>200000</WorkToBuild>
            <Flammability Inherit="False">0</Flammability>
            <MeditationFocusStrength>0.01</MeditationFocusStrength> <!-- Added in the Comps -->
            <StyleDominance MayRequire="Sarg.AlphaMemes">10000</StyleDominance>
            <SellPriceFactor>0</SellPriceFactor>
            <MarketValue>1</MarketValue>
            <!-- Since you can't move it, it shouldn't bloat your Wealth -->
          </statBases>
          <altitudeLayer>MoteOverhead</altitudeLayer>
          <passability>Impassable</passability>
          <selectable>true</selectable>
          <neverMultiSelect>true</neverMultiSelect>
          <useStuffTerrainAffordance>false</useStuffTerrainAffordance>
          <blockWind>true</blockWind>
          <staticSunShadowHeight>5</staticSunShadowHeight>
          <castEdgeShadows>true</castEdgeShadows>
          <fillPercent>1</fillPercent>
          <canGenerateDefaultDesignator>true</canGenerateDefaultDesignator>
          <constructionSkillPrerequisite>0</constructionSkillPrerequisite>
          <costStuffCount>3000</costStuffCount>
          <tradeability>None</tradeability>
          <stuffCategories>
            <li>Stony</li>
          </stuffCategories>
          <building>
            <preventDeteriorationInside>true</preventDeteriorationInside>
            <haulToContainerDuration>0.001</haulToContainerDuration>
            <sowTag>SupportPlantsOnly</sowTag>
            <canPlaceOverImpassablePlant>true</canPlaceOverImpassablePlant>
            <fullGraveGraphicData>
              <texPath>Things/Building/BuildingStyles/Kemetic/AM_Pyramid</texPath>
              <graphicClass>Graphic_Single</graphicClass>
              <drawSize>(12.75,12.75)</drawSize>
            </fullGraveGraphicData>
            <fixedStorageSettings>
              <filter>
                <thingDefs>
                  <li MayRequire="sirmashedpotato.escp.dunmer">ESCP_Dunmer_AshlanderMummy</li>
                  <li MayRequire="sirmashedpotato.escp.dunmer">ESCP_Dunmer_BurialUrn</li>
				  <li>AR_SarcophagusA</li>
                </thingDefs>
                <categories>
                  <li>Corpses</li>
                </categories>
              </filter>
            </fixedStorageSettings>
            <defaultStorageSettings>
              <priority>Critical</priority>
              <filter>
                <!--
                <thingDefs>
                  <li MayRequire="sirmashedpotato.escp.dunmer">ESCP_Dunmer_AshlanderMummy</li>
                  <li MayRequire="sirmashedpotato.escp.dunmer">ESCP_Dunmer_BurialUrn</li>
                </thingDefs>
				-->
                <categories>
                  <li>CorpsesHumanlike</li>
                </categories>
                <!--
                <specialFiltersToDisallow>
                  <li>AllowCorpsesStranger</li>
                </specialFiltersToDisallow>
				-->
              </filter>
            </defaultStorageSettings>
            <repairable>true</repairable>
            <isInert>true</isInert>
            <artificialForMeditationPurposes>false</artificialForMeditationPurposes>
            <ai_chillDestination>true</ai_chillDestination>
            <buildingTags>
              <li>RitualFocus</li>
            </buildingTags>
          </building>
          <researchPrerequisites>
            <li>AR_Project_Oriental_Culture</li>
            <li MayRequire="vanillaexpanded.vfeart">VFE_Res_Monuments</li>
          </researchPrerequisites>
          <leaveResourcesWhenKilled Inherit="False">True</leaveResourcesWhenKilled>
          <!-- Pyramids comes with their own foundations and, in RL, were built on unstable, soft, fine sand. Therefore, the presence of mud or any dirt is meaningless. Sadly, there is no such thing as an "anything but water" category, so this is the closest possible substitute. -->
          <terrainAffordanceNeeded Inherit="False">Light</terrainAffordanceNeeded>
          <!--
					<recipeMaker>
						<workSpeedStat>GeneralLaborSpeed</workSpeedStat>
						<workSkill>Artistic</workSkill>
						<unfinishedThingDef>UnfinishedSculpture</unfinishedThingDef>
						<effectWorking>Sculpt</effectWorking>
						<soundWorking>Recipe_Sculpt</soundWorking>
						<recipeUsers>
							<li>TableSculpting</li>
						</recipeUsers>
						<defaultIngredientFilter>
							<categories>
								<li>Root</li>
							</categories>
						</defaultIngredientFilter>
						<memePrerequisitesAny>
							<li>AM_Structure_Kemetism</li>
						</memePrerequisitesAny>
					</recipeMaker>
		  -->
          <damageMultipliers>
            <li>
              <damageDef>Bomb</damageDef>
              <multiplier>3</multiplier>
            </li>
            <li>
              <damageDef>Demolish</damageDef>
              <multiplier>2</multiplier>
            </li>
            <li>
              <damageDef>Poke</damageDef>
              <multiplier>0.01</multiplier>
            </li>
            <li>
              <damageDef>Blunt</damageDef>
              <multiplier>0</multiplier>
            </li>
            <li>
              <damageDef>Stab</damageDef>
              <multiplier>0.1</multiplier>
            </li>
            <li>
              <damageDef>Scratch</damageDef>
              <multiplier>0</multiplier>
            </li>
          </damageMultipliers>
          <comps Inherit="False">
            <li Class="CompProperties_Forbiddable"></li>
            <li Class="CompProperties_MeditationFocus">
              <statDef>MeditationFocusStrength</statDef>
              <focusTypes>
                <li>Artistic</li>
                <li>Morbid</li>
                <li>Dignified</li>
                <li MayRequire="sirmashedpotato.escp.dunmer">ESCP_DunmerAncestralMeditation</li>
              </focusTypes>
              <offsets>
                <li Class="FocusStrengthOffset_GraveFull">
                  <offset>0.35</offset>
                </li>
                <li Class="FocusStrengthOffset_GraveCorpseRelationship">
                  <offset>1</offset>
                </li>
                <li Class="FocusStrengthOffset_NearbyGraves">
                  <defs>
                    <li MayRequire="sirmashedpotato.escp.dunmer">ESCP_Dunmer_AshlanderMummy</li>
                    <li MayRequire="sirmashedpotato.escp.dunmer">ESCP_Dunmer_BurialUrn</li>
                    <li MayRequire="heis.edo.themed.expansion">HSHaka</li>
                    <li>AR_SarcophagusA</li>
                    <li>Sarcophagus</li>
                    <li>Grave</li>
                  </defs>
                  <!-- <offsetPerBuilding>0.015</offsetPerBuilding> -->
                  <radius>80</radius>
                  <maxBuildings>40</maxBuildings>
                  <focusPerFullGrave>0.09</focusPerFullGrave>
                  <explanationKey>MeditationFocusPerGrave</explanationKey>
                  <explanationKeyAbstract>MeditationFocusPerGraveAbstract</explanationKeyAbstract>
                </li>
              </offsets>
            </li>
            <li Class="CompProperties_Art">
              <nameMaker>NamerArtSarcophagusPlate</nameMaker>
              <descriptionMaker>ArtDescription_SarcophagusPlate</descriptionMaker>
              <mustBeFullGrave>true</mustBeFullGrave>
            </li>
            <li Class="CompProperties_SpawnSubplant" MayRequire="biomesteam.oasis">
              <compClass MayRequire="biomesteam.oasis">CompSpawnSubplantDuration</compClass>
              <subplant MayRequire="biomesteam.oasis">BMT_Papyrus</subplant>
              <maxRadius>6</maxRadius>
              <subplantSpawnDays>1</subplantSpawnDays>
              <minGrowthForSpawn>0</minGrowthForSpawn>
              <initialGrowthRange>0.5~1</initialGrowthRange>
              <canSpawnOverPlayerSownPlants>false</canSpawnOverPlayerSownPlants>
              <plantsToNotOverwrite MayRequire="biomesteam.oasis">
                <li MayRequire="Ludeon.RimWorld.Ideology">Plant_TreeGauranlen</li>
                <li MayRequire="Ludeon.RimWorld.Ideology">Plant_PodGauranlen</li>
                <li MayRequire="Ludeon.RimWorld.Royalty">Plant_GrassAnima</li>
                <li MayRequire="Ludeon.RimWorld.Royalty">Plant_TreeAnima</li>
                <li MayRequire="biomesteam.oasis">BMT_Papyrus</li>
              </plantsToNotOverwrite>
            </li>
            <li Class="CompProperties_AssignableToPawn">
              <drawAssignmentOverlay>true</drawAssignmentOverlay>
              <compClass>CompAssignableToPawn_Grave</compClass>
            </li>
			<li>
				<compClass>CompGatherSpot</compClass>
			</li>
			<li Class="CompProperties_Styleable"></li>
          </comps>
          <placeWorkers>
            <li>PlaceWorker_RitualFocusNoArrow</li>
            <li>PlaceWorker_MeditationOffsetBuildingsNear</li>
            <li>PlaceWorker_RitualFocus</li>
            <li>PlaceWorker_NotUnderRoof</li>
          </placeWorkers>
          <ritualFocus>
            <spectateDistance>2~6</spectateDistance>
            <allowedSpectateSides>All</allowedSpectateSides>
          </ritualFocus>
        </ThingDef>
      </value>
    </match>
    <!-- If the first XPATH does not exist, the original code stands. -->
  </Operation>
  
	<Operation Class="PatchOperationConditional">
	<!-- Does this exist? -->
		<xpath>/Defs/ThingDef[defName="AM_GreatPyramid"]</xpath>
		<!-- If it does, do this replacement. -->
		<match Class="PatchOperationReplace">
			<success>Always</success>
			<xpath>/Defs/ThingDef[defName="AM_GreatPyramid"]</xpath>
			<value>
				<ThingDef ParentName="SteleBase">
					<defName>AM_GreatPyramid</defName>
					<label>great pyramid</label>
					<description>A truly colossal stone structure whose outer surfaces are triangular and converge to a single step at the top. Nothing can harm it. Nothing can stop it. Ten thousand years from now, future civilizations will stare at it in awe.</description>
					<graphicData Inherit="False">
						<graphicClass>Graphic_Single</graphicClass>
						<texPath>Things/Building/BuildingStyles/Kemetic/AM_GreatPyramid</texPath>
						<drawSize>(24,24)</drawSize>
					</graphicData>
					<drawOffscreen>true</drawOffscreen>
					<thingClass>Building_Art</thingClass>
					<useHitPoints>true</useHitPoints>
					<passability>Impassable</passability>
					<pathCost>999</pathCost>
					<rotatable>false</rotatable>
					<size>(24,24)</size>
					<canOverlapZones>false</canOverlapZones>
					<statBases>
						<MaxHitPoints>175000</MaxHitPoints>
						<Beauty>7000</Beauty>
						<Mass>100000</Mass>
						<WorkToBuild>400000</WorkToBuild>
						<Flammability>0</Flammability>
						<StyleDominance MayRequire="Ludeon.RimWorld.Ideology">2000</StyleDominance>
						<MeditationFocusStrength>0.5</MeditationFocusStrength>
					</statBases>
					<building>
						<sowTag>SupportPlantsOnly</sowTag>
						<canPlaceOverImpassablePlant>true</canPlaceOverImpassablePlant>
						<repairable>true</repairable>
						<isInert>true</isInert>
						<artificialForMeditationPurposes>false</artificialForMeditationPurposes>
						<ai_chillDestination>true</ai_chillDestination>
						<buildingTags>
							<li>RitualFocus</li>
						</buildingTags>
					</building>
					<altitudeLayer>Building</altitudeLayer>
					<passability>Impassable</passability>
					<blockWind>true</blockWind>
					<castEdgeShadows>true</castEdgeShadows>
					<staticSunShadowHeight>20</staticSunShadowHeight>
					<fillPercent>1</fillPercent>
					<canGenerateDefaultDesignator>true</canGenerateDefaultDesignator>
					<stuffCategories>
						<li>Stony</li>
					</stuffCategories>
					<minifiedDef>MinifiedThing</minifiedDef>
					<designationCategory>Jerry</designationCategory>
					<thingCategories>
						<li>BuildingsMisc</li>
					</thingCategories>
					<costStuffCount>9000</costStuffCount>
					<researchPrerequisites Inherit="False">
						<li>AR_Project_Oriental_Culture</li>
						<li MayRequire="vanillaexpanded.vfeart">VFE_Res_Monuments</li>
					</researchPrerequisites>
					<leaveResourcesWhenKilled Inherit="False">True</leaveResourcesWhenKilled>
					<!-- Pyramids comes with their own foundations and, in RL, were built on unstable, soft, fine sand. Therefore, the presence of mud or any dirt is meaningless. Sadly, there is no such thing as an "anything but water" category, so this is the closest possible substitute. -->
					<terrainAffordanceNeeded Inherit="False">Light</terrainAffordanceNeeded>
					<placeWorkers>
						<li>PlaceWorker_RitualFocusNoArrow</li>
						<li>PlaceWorker_MeditationOffsetBuildingsNear</li>
						<li>PlaceWorker_RitualFocus</li>
						<li>PlaceWorker_NotUnderRoof</li>
					</placeWorkers>
					<ritualFocus>
						<spectateDistance>2~24</spectateDistance>
						<allowedSpectateSides>All</allowedSpectateSides>
					</ritualFocus>
					<inspectorTabs>
						<li>ITab_Art</li>
					</inspectorTabs>
					<tradeTags>
						<li>Art</li>
					</tradeTags>
					<comps Inherit="False">
						<li Class="CompProperties_Art">
							<nameMaker>NamerArtSarcophagusPlate</nameMaker>
							<descriptionMaker>ArtDescription_SarcophagusPlate</descriptionMaker>
						</li>
						<li Class="CompProperties_MeditationFocus">
							<statDef>MeditationFocusStrength</statDef>
							<focusTypes>
								<li>Artistic</li>
								<li>Morbid</li>
								<li>Dignified</li>
								<li MayRequire="sirmashedpotato.escp.dunmer">ESCP_DunmerAncestralMeditation</li>
							</focusTypes>
							<offsets>
								<li Class="FocusStrengthOffset_NearbyGraves">
									<defs>
										<li MayRequire="sirmashedpotato.escp.dunmer">ESCP_Dunmer_AshlanderMummy</li>
										<li MayRequire="sirmashedpotato.escp.dunmer">ESCP_Dunmer_BurialUrn</li>
										<li MayRequire="heis.edo.themed.expansion">HSHaka</li>
										<li>AR_SarcophagusA</li>
										<li>Sarcophagus</li>
										<li>Grave</li>
									</defs>
									<!-- <offsetPerBuilding>0.015</offsetPerBuilding> -->
									<radius>120</radius>
									<maxBuildings>80</maxBuildings>
									<focusPerFullGrave>0.12</focusPerFullGrave>
									<explanationKey>MeditationFocusPerGrave</explanationKey>
									<explanationKeyAbstract>MeditationFocusPerGraveAbstract</explanationKeyAbstract>
								</li>
							</offsets>
						</li>
						<li Class="CompProperties_SpawnSubplant" MayRequire="biomesteam.oasis">
							<compClass MayRequire="biomesteam.oasis">CompSpawnSubplantDuration</compClass>
							<subplant MayRequire="biomesteam.oasis">BMT_Papyrus</subplant>
							<maxRadius>20</maxRadius>
							<subplantSpawnDays>1</subplantSpawnDays>
							<minGrowthForSpawn>0</minGrowthForSpawn>
							<initialGrowthRange>0.5~1</initialGrowthRange>
							<canSpawnOverPlayerSownPlants>false</canSpawnOverPlayerSownPlants>
							<plantsToNotOverwrite MayRequire="biomesteam.oasis">
								<li MayRequire="Ludeon.RimWorld.Ideology">Plant_TreeGauranlen</li>
								<li MayRequire="Ludeon.RimWorld.Ideology">Plant_PodGauranlen</li>
								<li MayRequire="Ludeon.RimWorld.Royalty">Plant_GrassAnima</li>
								<li MayRequire="Ludeon.RimWorld.Royalty">Plant_TreeAnima</li>
								<li MayRequire="biomesteam.oasis">BMT_Papyrus</li>
							</plantsToNotOverwrite>
						</li>
						<li Class="AlphaMemes.CompProperties_CorpseContainer">
							<transformLabel>Great Pyramid of {CORPSE}</transformLabel>
							<inspectString>Contains the last remains of the glorious, magnanimous {CORPSE}</inspectString>
						</li>
						<li>
							<compClass>CompGatherSpot</compClass>
						</li>
						<li Class="CompProperties_Styleable"></li>
					</comps>
				</ThingDef>
			</value>
		</match>
	<!-- If the first XPATH does not exist, the original code stands. -->
	</Operation>
</Patch>
